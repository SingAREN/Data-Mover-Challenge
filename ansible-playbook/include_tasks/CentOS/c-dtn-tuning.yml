---
  - name: Annex C - Install pre-requisite packages for interface tuning
    yum:
      name:
        - pciutils
        - libnl3-devel
        - ethtool
        - python36-pip
        - python36-devel
        - python-setuptools
        - gcc
        - perl
        - "kernel-devel-{{ ansible_kernel }}"
        - python-devel
        - lsof
        - redhat-rpm-config
        - rpm-build
        - gtk2
        - atk
        - cairo
        - tcl
        - gcc-gfortran
        - tcsh
        - tk
        - libusbx
        - fuse-libs
      state: present 

  - name: Annex C - Check if mlnx_tune package exists
    stat:
      path: /usr/sbin/mlnx_tune
    register: mlnx_tune
  
  - name: Annex C - Download Mellanox OFED Package
    get_url:
      url: "http://content.mellanox.com/ofed/MLNX_OFED-{{ OFED_VERSION }}/MLNX_OFED_LINUX-{{ OFED_VERSION }}-rhel7.9-x86_64.tgz"
      dest: /tmp/MLNX_OFED_LINUX-{{ OFED_VERSION }}-rhel7.9-x86_64.tgz
      checksum: sha256:c13df12fadc45bdd1432c45723e846b52a4f20abbc8e8eac139b29623bb435ac
    register: ofed_download
    when: mlnx_tune.stat.exists == False
  
  - name: Annex C - Unarchive Mellanox OFED Pacakage
    unarchive:
      src: "{{ ofed_download.dest }}"
      dest: /tmp
      list_files: yes
    register: ofed_fp
    when: mlnx_tune.stat.exists == False
  
  - name: Annex C - Compile and Install Mellanox OFED
    shell: "{{ ofed_fp.dest }}/{{ ofed_fp.files[0].split('/')[1] }}/mlnxofedinstall  --kernel-sources /usr/src/kernels/{{ ansible_kernel }} --add-kernel-support --skip-repo"
    when: mlnx_tune.stat.exists == False

  - name: Annex C - Clean up after Mellanox OFED installation
    file:
      path: "{{ ofed_download.dest }}"
      state: absent
    when: mlnx_tune.stat.exists == False
  
  - name: Annex C - Install Pre-Requisite Python Packages for TuneDTN script from pip
    pip:
      name:
        - ethtool==0.14
        - pyroute2==0.6.1
        - importlib_metadata==4.0.1
        - mitogen==0.2.9
      state: present
      executable: pip3.6

  - name: Annex C - Generate TuneDTN.py for {{ DMC_INTERFACES | join(', ') }} interfaces
    template:
      src: templates/TuneDTN.py.j2
      dest: /tmp/dmc20-script-TuneDTN.py
      mode: 0644
    register: tunedtn_script
  
  - name: Annex C - Run TuneDTN.py
    shell: python3.6 {{ tunedtn_script.dest|quote }}
    register: tunedtn
  
  - name: Annex C - Save TuneDTN output
    copy:
      content: "{% for line in tunedtn.stdout_lines %}{{line}}\n{% endfor %}"
      dest: "{{ TUNEDTN_OUTPUT_LOG }}"
  
  - debug: var=tunedtn.stdout_lines

---
  - name: Install pre-requisite packages for interface tuning
    apt:  
      name:
        - python3-distutils
        - build-essential
        - dh-autoreconf
        - debhelper
        - gcc
        - pkg-config
        - make
        - bzip2
        - quilt
        - unzip
        - pciutils
      state: latest
  
  - name: Annex C - Check if mlnx_tune package exists
    stat:
      path: /usr/sbin/mlnx_tune
    register: mlnx_tune
  
  - name: Annex C - Download Mellanox OFED Package
    get_url:
      url: "http://content.mellanox.com/ofed/MLNX_OFED-{{ OFED_VERSION }}/MLNX_OFED_LINUX-{{ OFED_VERSION }}-ubuntu18.04-x86_64.tgz"
      dest: /tmp/MLNX_OFED_LINUX-{{ OFED_VERSION }}-ubuntu18.04-x86_64.tgz
      checksum: sha256:bfdb1efad5f623ee1901abdd776ca4ed2cfecab348d553fd53ad67715064637f
    register: ofed_download
    when: mlnx_tune.stat.exists == False
  
  - name: Annex C - Unarchive Mellanox OFED Pacakage
    unarchive:
      src: "{{ ofed_download.dest }}"
      dest: /tmp
      list_files: yes
    register: ofed_fp
    when: mlnx_tune.stat.exists == False
  
  - name: Annex C - Compile and Install Mellanox OFED
    shell: "{{ ofed_fp.dest }}/{{ ofed_fp.files[0].split('/')[1] }}/mlnxofedinstall  --kernel-sources /usr/src/linux-headers-{{ ansible_kernel }} --add-kernel-support --skip-repo"
    when: mlnx_tune.stat.exists == False

  - name: Annex C - Clean up after Mellanox OFED installation
    file:
      path: "{{ ofed_download.dest }}"
      state: absent
    when: mlnx_tune.stat.exists == False
  
  - name: Annex C - Install ethtool kernel interface
    pip:
      name:
        - ethtool
        - pyroute2
        - importlib_metadata
        - mitogen
      state: latest
      executable: pip3
  
  - name: Annex C - Create TuneDTN.py from template
    template:
      src: templates/TuneDTN.py.j2
      dest: /tmp/dmc20-script-TuneDTN.py
      mode: 0644
    register: tunedtn_script
  
  - name: Annex C - Run TuneDTN.py
    shell: python3 {{ tunedtn_script.dest|quote }}
    register: tunedtn
  
  - name: Annex C - Save TuneDTN output
    copy:
      content: "{% for line in tunedtn.stdout_lines %}{{line}}\n{% endfor %}"
      dest: "{{ TUNEDTN_OUTPUT_LOG }}"
  
  - debug: var=tunedtn.stdout_lines